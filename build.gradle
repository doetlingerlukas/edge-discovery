buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '6.1.0'
  id 'eclipse'
  id 'maven'
  id 'jacoco'
}

// for compliance with higher Java versions
jacoco {
  toolVersion = "0.8.5"
}

def vertxVersion = "4.1.5"
def junitJupiterVersion = "5.8.1"

def mainVerticleName = "edge.discovery.LocalNetworkVerticle"
def launcherClassName = "io.vertx.core.Launcher"

def watchForChange = "src/**/*"
def doOnChange = "${projectDir}/gradlew classes"

repositories {
  mavenCentral()
  maven {
    name "jitpack"
    url 'https://jitpack.io'
  }
}

dependencies {
  // Apollo Dependencies
  if (project.hasProperty("local")) {
    implementation project (':EE-Guice')
    implementation project (':EE-Core')
    implementation project (':EE-Model')
  } else {
    implementation 'com.github.Apollo-Core:EE-Guice:main-SNAPSHOT'
    implementation 'com.github.Apollo-Core:EE-Core:v1.0.0'
    implementation 'com.github.Apollo-Core:EE-Model:v1.0.0'
  }

  // SDARG Dependencies
  implementation "com.github.FedorSmirnov89:opt4j:-SNAPSHOT"
  // dependency to opendse
  implementation "com.github.FedorSmirnov89:opendse:-SNAPSHOT"

  implementation platform("io.vertx:vertx-stack-depchain:${vertxVersion}")
  implementation "io.vertx:vertx-core:${vertxVersion}"
  implementation "io.vertx:vertx-web:${vertxVersion}"
  implementation "io.vertx:vertx-web-client:${vertxVersion}"
  implementation 'ch.qos.logback:logback-classic:1.2.6'
  implementation "com.google.code.gson:gson:2.8.8"
  implementation "com.google.inject:guice:5.0.1"

  // Apache Commons Net used for networking stuff
  implementation "commons-net:commons-net:3.8.0"

  testImplementation "io.vertx:vertx-junit5:${vertxVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
  testImplementation "io.vertx:vertx-web-client:${vertxVersion}"
}

shadowJar {
  archiveClassifier.set("fat")
  manifest {
    attributes("Main-Verticle": mainVerticleName)
  }
  mergeServiceFiles()
}

runShadow {
  args "run", mainVerticleName, "--redeploy=${watchForChange}", "--launcher-class=${launcherClassName}", "--on-redeploy=${doOnChange}"
}

test {
  useJUnitPlatform()
}
